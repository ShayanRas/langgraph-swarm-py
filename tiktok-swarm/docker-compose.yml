services:
  tiktok-swarm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tiktok-swarm-app
    ports:
      - "8000:8000"
    environment:
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # Supabase Configuration
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      
      # Application Configuration
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
    volumes:
      # Mount source code for hot reloading in development
      - ./src:/app/src:ro
      # Mount .env file if it exists
      - ./.env:/app/.env:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    networks:
      - swarm-network

  # Optional: Local PostgreSQL for development (comment out if using Supabase cloud)
  postgres:
    image: postgres:15-alpine
    container_name: tiktok-swarm-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=tiktok_swarm
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - swarm-network
    profiles:
      - dev

networks:
  swarm-network:
    driver: bridge

volumes:
  postgres_data: